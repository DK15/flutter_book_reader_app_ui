import 'dart:math';

import 'package:flutter/material.dart';

void main() => runApp(MyApp());

class MyApp extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Perspective',
      home: MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  MyHomePage({Key key}) : super(key: key);
  @override
  _MyHomePageState createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> with TickerProviderStateMixin {
  Animation anim, anim1;
  AnimationController animCtrl;

  @override
  void initState() {
    super.initState();

    animCtrl = AnimationController(
      duration: Duration(milliseconds: 250),
      vsync: this,
    );

    anim = Tween(begin: 1.571, end: 0.0).animate(animCtrl)..addListener((){
      setState(() {});
    });

    anim1 = Tween(begin: 0.5, end: 1.0).animate(animCtrl)..addListener((){
      setState(() {});
    });

    animCtrl.forward();
  }

  @override
  void dispose() {
    super.dispose();
    animCtrl.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Perspective'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: <Widget>[
            Transform(
              transform: Matrix4.identity()
                ..setEntry(3, 2, 0.006)
                ..rotateY(anim.value)..translate(-0.56),
              alignment: Alignment.centerLeft,
              child: ClipRect(
                child: Align(
                  alignment: Alignment.centerRight,
                  widthFactor: 1.0,
                  child: Container(
                    width: 180.0,
                    height: 180.0,
                    color: Colors.redAccent,
                  ),
                ),
              ),
            ),
            SizedBox(
              height: 20.0,
            ),
            RaisedButton(
              onPressed: () {
                if(animCtrl.status == AnimationStatus.completed) {
                  animCtrl.reverse();
                } else {
                  animCtrl.animateTo(1.571, curve: Curves.bounceOut);
                }
                //print('X');
              },
              child: Text('GO'),
            ),
          ],
        ),
      ),
    );
  }
}


switch (text) {
                case 'Book List':
                  if (menuListCtrl.status == AnimationStatus.completed) {
                    menuListCtrl.reverse();
                  } else {
                    menuListCtrl.animateTo(1.571, curve: Curves.bounceOut);
                  }

                  if (closeMenu.status == AnimationStatus.completed) {
                    closeMenu.reverse();
                  } else {
                    closeMenu.forward();
                  }
                  break;
              }